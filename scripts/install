#!/bin/bash

source .fonctions	# Charge les fonctions génériques habituellement utilisées dans le script

YNH_VERSION	# Récupère le numéro de version de Yunohost.

CLEAN_SETUP () {
# Nettoyage des résidus d'installation non pris en charge par le script remove.
	# Clean hosts
	sudo sed -i '/#leed/d' /etc/hosts
}
TRAP_ON	# Active trap pour arrêter le script si une erreur est détectée.

# Retrieve arguments
if [ $ynh_version = "2.4" ]
then
	domain=$YNH_APP_ARG_DOMAIN
	path=$YNH_APP_ARG_PATH
	admin=$YNH_APP_ARG_ADMIN
	user_pwd=$YNH_APP_ARG_PASSWORD
	language=$YNH_APP_ARG_LANGUAGE
	market=$YNH_APP_ARG_MARKET
	is_public=$YNH_APP_ARG_IS_PUBLIC

	app=$YNH_APP_INSTANCE_NAME

	# Source app helpers
	source /usr/share/yunohost/helpers
else
	domain=$1
	path=$2
	admin=$3
	user_pwd=$4
	language=$5
	market=$6
	is_public=$7
	app=leed
fi

# Vérifie que les variables ne sont pas vides.
CHECK_VAR "$app" "app name not set"


CHECK_USER "$admin"	# Vérifie la validité de l'user admin

CHECK_PATH	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.

CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.


# Enregistre les infos dans la config YunoHost
sudo yunohost app setting $app admin -v $admin
sudo yunohost app setting $app language -v $language
sudo yunohost app setting $app domain -v $domain

GENERATE_DB $app	# Créer une base de données et un utilisateur dédié au nom de l'app.


# Crée le repertoire de destination et stocke son emplacement.
sudo mkdir "$final_path"
sudo yunohost app setting $app final_path -v $final_path

SETUP_SOURCE "leed.tar.gz"	# Télécharge la source, décompresse et copie dans $final_path

# Et copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf


# Modifie les variables dans le fichier de configuration nginx
sudo sed -i "s@__PATH__@$path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__NAMETOCHANGE__@$app@g" /etc/nginx/conf.d/$domain.d/$app.conf

POOL_FPM	# Créer le fichier de configuration du pool php-fpm et le configure.


# Set right permissions for curl install
sudo chown -R www-data: $final_path

# Rend la page d'install publique pour curl
sudo yunohost app setting $app unprotected_uris -v "/"	#L'usage de unprotected_uris a la place de skipped_uris permet de passer le header d'auth http
sudo yunohost app ssowatconf

# Reload Nginx
sudo service nginx reload

# Leed installation via curl
echo "127.0.0.1 $domain #leed" | sudo tee -a /etc/hosts
sleep 1
curl -k --data "install_changeLngLeed=$language&root=$domain$path&mysqlHost=localhost&mysqlLogin=$db_user&mysqlMdp=$db_pwd&mysqlBase=$db_user&mysqlPrefix=leed_&login=$admin&password=$user_pwd" https://$domain$path/install.php?installButton > /dev/null

# Activate Leed Market if necessary
sudo yunohost app setting $app market -v "$market"
if [ "$market" = "Yes" ];
then
	sudo rm -R $final_path/plugins
	sudo git clone https://github.com/ldleman/Leed-market.git $final_path/plugins
fi


# Configure les droits d'accès au fichiers
# -rw-r--r-- sur les fichiers
sudo find $final_path -type f | xargs sudo chmod 644
# drwxr-xr-x sur les dossiers
sudo find $final_path -type d | xargs sudo chmod 755
# Les fichiers appartiennent à root
sudo chown -R root: $final_path

# www-data doit avoir les droits d'écriture dans plugins, cache et updates
sudo mkdir $final_path/cache
sudo chown -R www-data $final_path/cache $final_path/plugins $final_path/updates


# Récupération du code de synchronisation
code_sync=$(mysql -h localhost -u $db_user -p$db_pwd -s $db_user -e 'SELECT value FROM leed_configuration WHERE `key`="synchronisationCode"' | sed -n 1p)
CHECK_VAR "$code_sync" "code_sync empty"

# Mise en place du cron pour la synchronisation
sed -i "s@__ADMIN__@$admin@g" ../conf/cron_leed
sed -i "s@__DOMAIN__@$domain@g" ../conf/cron_leed
sed -i "s@__PATH__@$path@g" ../conf/cron_leed
sed -i "s@__CODESYNC__@$code_sync@g" ../conf/cron_leed
sudo cp ../conf/cron_leed /etc/cron.d/$app

# Make app private if necessary
sudo yunohost app setting $app is_public -v "$is_public"
if [ "$is_public" = "No" ];
then
	# Retire l'autorisation d'accès de la page d'install.
	sudo yunohost app setting $app unprotected_uris -d
	# Rend la page d'actualisation accessible pour le script cron.
	sudo yunohost app setting $app skipped_uris -v "/action.php"
	sudo yunohost app ssowatconf
fi

# Clean hosts
sudo sed -i '/#leed/d' /etc/hosts
