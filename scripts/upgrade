#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If install_dir doesn't exist, create it
if [ -z "$install_dir" ]; then
#REMOVEME?     install_dir=/var/www/$app
#REMOVEME?     ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
fi

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
    db_name=$(ynh_sanitize_dbid --db_name=$app)
#REMOVEME?     ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

# If overwrite_nginx doesn't exist, create it
if [ -z "$overwrite_nginx" ]; then
    overwrite_nginx=1
    ynh_app_setting_set --app=$app --key=overwrite_nginx --value=$overwrite_nginx
fi

# If overwrite_phpfpm doesn't exist, create it
if [ -z "$overwrite_phpfpm" ]; then
    overwrite_phpfpm=1
    ynh_app_setting_set --app=$app --key=overwrite_phpfpm --value=$overwrite_phpfpm
fi

# If admin_mail_html doesn't exist, create it
if [ -z "$admin_mail_html" ]; then
    admin_mail_html=1
#REMOVEME?     ynh_app_setting_set --app=$app --key=admin_mail_html --value=$admin_mail_html
fi

# If fpm_footprint doesn't exist, create it
if [ -z "$fpm_footprint" ]; then
    fpm_footprint=low
    ynh_app_setting_set --app=$app --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "$fpm_usage" ]; then
    fpm_usage=low
    ynh_app_setting_set --app=$app --key=fpm_usage --value=$fpm_usage
fi

# If fpm_footprint doesn't exist, create it
if [ -z "$fpm_footprint" ]; then
	fpm_footprint=low
	ynh_app_setting_set --app=$app --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "$fpm_usage" ]; then
	fpm_usage=low
	ynh_app_setting_set --app=$app --key=fpm_usage --value=$fpm_usage
fi


#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace=1

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

ynh_add_fpm_config --usage="$fpm_usage" --footprint="$fpm_footprint"

ynh_add_nginx_config

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/nginx/${domain}-error.log" --failregex="PHP message: Leed: wrong login for .* client: <HOST>" --max_retry=5

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression --message="Finalizing upgrade..."

ynh_local_curl "/"

code_sync=$(mysql -h localhost -u $db_user -p$db_pwd -s $db_name -e 'SELECT value FROM leed_configuration WHERE `key`="synchronisationCode"' | sed -n 1p)
ynh_add_config --template="../conf/cron_leed" --destination="/etc/cron.d/$app"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
