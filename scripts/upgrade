#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
admin=$(ynh_app_setting_get $app admin)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)
db_pwd=$(ynh_app_setting_get $app mysqlpwd)
db_name=$(ynh_app_setting_get $app db_name)

#=================================================
# CHECK VERSION
#=================================================

# ynh_abort_if_up_to_date
upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# FIX OLD THINGS
#=================================================

if [ -z $final_path ]; then	# Si final_path n'est pas renseigné dans app setting
	final_path=/var/www/$app
	ynh_app_setting_set $app final_path $final_path
fi

if [ -z $db_name ]; then	# Si db_name n'est pas renseigné dans app setting
	db_name=$(ynh_make_valid_dbid $app)
	ynh_app_setting_set $app db_name $db_name
fi

if [ -z "$is_public" ]; then	# Raté avec get au lieu de set...
	public_check=$(ynh_app_setting_get $app skipped_uris)
	if [ -z "$public_check" ]; then	# Si skipped_uris est vide, c'était une install publique.
		is_public=1
	else
		is_public=0
	fi
	ynh_app_setting_set $app is_public $is_public
else
	if [ "$is_public" = "Yes" ]; then
		ynh_app_setting_set $app is_public 1	# Fixe is_public en booléen
		is_public=1
	elif [ "$is_public" = "No" ]; then
		ynh_app_setting_set $app is_public 0
		is_public=0
	fi
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.

#=================================================
# ACTIVATE MAINTENANCE MODE
#=================================================

ynh_maintenance_mode_ON

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_setup_source "$final_path"	# Télécharge la source, décompresse et copie dans $final_path
fi

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Create the dedicated user, if not exist

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

ynh_add_fpm_config	# Créer le fichier de configuration du pool php-fpm et le configure.

#=================================================
# SPECIFIC UPGRADE
#=================================================
# RETRIEVE SYNCHRONISATION CODE
#=================================================

code_sync=$(mysql -h localhost -u $db_name -p$db_pwd -s $db_name -e 'SELECT value FROM leed_configuration WHERE `key`="synchronisationCode"' | sed -n 1p)

#=================================================
# SETUP CRON FILE FOR SYNCHRONISATION
#=================================================

ynh_replace_string "__ADMIN__" "$admin" ../conf/cron_leed
ynh_replace_string "__DOMAIN__" "$domain" ../conf/cron_leed
ynh_replace_string "__PATH__" "$path_url" ../conf/cron_leed
ynh_replace_string "__CODESYNC__" "$code_sync" ../conf/cron_leed
cp ../conf/cron_leed /etc/cron.d/$app

#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

# Les fichiers appartiennent à root
chown -R root: $final_path
# www-data doit avoir les droits d'écriture dans plugins, cache et updates
mkdir -p $final_path/cache
chown -R $app $final_path/cache $final_path/plugins $final_path/updates

#=================================================
# UPGRADE WITH CURL
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	# Vide le cache de leed pour la mise à jour
	ynh_secure_remove $final_path/cache/*
	# Laisse un accès libre pour curl.
	ynh_app_setting_set $app unprotected_uris "/"
	# Régénère la configuration de SSOwat
	yunohost app ssowatconf
	# Lance la procédure de mise à jour de leed.
	ynh_local_curl "/"
fi

#=================================================
# GENERIC FINALISATION
#=================================================
# UPGRADE FAIL2BAN
#=================================================

ynh_add_fail2ban_config "/var/log/nginx/${domain}-error.log" "PHP message: Leed: wrong login for .* client: <HOST>" 5

#=================================================
# SETUP SSOWAT
#=================================================

# Make app private if necessary
if [ $is_public -eq 0 ];
then
	# Retire l'autorisation d'accès à leed
	ynh_app_setting_delete $app unprotected_uris
	# Rend la page d'actualisation accessible pour le script cron.
	ynh_app_setting_set $app skipped_uris "/action.php"
fi

#=================================================
# RELOAD NGINX
#=================================================

ynh_system_reload --service_name=nginx

#=================================================
# DEACTIVE MAINTENANCE MODE
#=================================================

ynh_maintenance_mode_OFF
